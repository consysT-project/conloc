(declare-datatypes ((T_GCounter 0)) (((T_GCounter (increments (Array Int Int))))))
(declare-datatypes ((T_PNCounter 0)) (((T_PNCounter (incCounter T_GCounter) (decCounter T_GCounter)))))
(declare-datatypes ((T_ReplicatedCreditAccount 0)) (((T_ReplicatedCreditAccount (credits T_PNCounter)))))
(declare-fun GCounter.getValue$state!0 (T_GCounter) T_GCounter)
(declare-fun GCounter.getValue!1 (T_GCounter) Int)
(declare-fun GCounter.inc$state!3 (T_GCounter) T_GCounter)
(declare-fun GCounter.inc$state!6 (T_GCounter Int) T_GCounter)
(declare-fun PNCounter.getValue$state!11 (T_PNCounter) T_PNCounter)
(declare-fun PNCounter.getValue!12 (T_PNCounter) Int)
(declare-fun PNCounter.inc$state!13 (T_PNCounter) T_PNCounter)
(declare-fun PNCounter.inc$state!16 (T_PNCounter Int) T_PNCounter)
(declare-fun PNCounter.dec$state!18 (T_PNCounter) T_PNCounter)
(declare-fun PNCounter.dec$state!21 (T_PNCounter Int) T_PNCounter)
(declare-fun ReplicatedCreditAccount.getValue$state!26
             (T_ReplicatedCreditAccount)
             T_ReplicatedCreditAccount)
(declare-fun ReplicatedCreditAccount.getValue!27
             (T_ReplicatedCreditAccount)
             Int)
(declare-fun ReplicatedCreditAccount.deposit$state!29
             (T_ReplicatedCreditAccount Int)
             T_ReplicatedCreditAccount)
(declare-fun ReplicatedCreditAccount.withdraw$state!32
             (T_ReplicatedCreditAccount Int)
             T_ReplicatedCreditAccount)


(assert (forall ((s0!47 T_GCounter)) (= s0!47 (GCounter.getValue$state!0 s0!47))))


(assert (forall ((s0!47 T_GCounter))
  (let ((a!1 (+ (select (increments (GCounter.getValue$state!0 s0!47)) 0)
                (select (increments (GCounter.getValue$state!0 s0!47)) 1)
                (select (increments (GCounter.getValue$state!0 s0!47)) 2))))
    (= (GCounter.getValue!1 s0!47) a!1))))
    

    
(assert (forall ((s0!52 T_GCounter)) true))

(assert (forall ((s0!52 T_GCounter))
  (let ((a!1 (store (increments s0!57) 1 (+ (select (increments s0!57) 1) n!5))))
    (= (GCounter.inc$state!3 s0!52) (T_GCounter a!1))
  )
))

(check-sat)
(exit)


(assert (forall ((s0!57 T_GCounter) (n!5 Int)) true))
(assert (forall ((s0!57 T_GCounter) (n!5 Int))
  (let ((a!1 (store (increments s0!57) 1 (+ (select (increments s0!57) 1) n!5))))
    (= (increments (GCounter.inc$state!6 s0!57 n!5)) a!1))))
    
    

    
    
    
(assert (forall ((s0!71 T_PNCounter)) (= s0!71 (PNCounter.getValue$state!11 s0!71))))
(assert (forall ((s0!71 T_PNCounter))
  (let ((a!1 (* (- 1)
                (GCounter.getValue!1
                  (decCounter (PNCounter.getValue$state!11 s0!71))))))
  (let ((a!2 (+ (GCounter.getValue!1
                  (incCounter (PNCounter.getValue$state!11 s0!71)))
                a!1)))
    (= (PNCounter.getValue!12 s0!71) a!2)))))
(assert (forall ((s0!76 T_PNCounter))
  (= (decCounter s0!76) (decCounter (PNCounter.inc$state!13 s0!76)))))
(assert (forall ((s0!76 T_PNCounter))
  (= (incCounter (PNCounter.inc$state!13 s0!76))
     (GCounter.inc$state!3 (incCounter s0!76)))))
(assert (forall ((s0!81 T_PNCounter) (n!15 Int))
  (= (decCounter s0!81) (decCounter (PNCounter.inc$state!16 s0!81 n!15)))))
(assert (forall ((s0!81 T_PNCounter) (n!15 Int))
  (= (incCounter (PNCounter.inc$state!16 s0!81 n!15))
     (GCounter.inc$state!6 (incCounter s0!81) n!15))))
(assert (forall ((s0!86 T_PNCounter))
  (= (incCounter s0!86) (incCounter (PNCounter.dec$state!18 s0!86)))))
(assert (forall ((s0!86 T_PNCounter))
  (= (decCounter (PNCounter.dec$state!18 s0!86))
     (GCounter.inc$state!3 (decCounter s0!86)))))
(assert (forall ((s0!91 T_PNCounter) (n!20 Int))
  (= (incCounter s0!91) (incCounter (PNCounter.dec$state!21 s0!91 n!20)))))
(assert (forall ((s0!91 T_PNCounter) (n!20 Int))
  (= (decCounter (PNCounter.dec$state!21 s0!91 n!20))
     (GCounter.inc$state!6 (decCounter s0!91) n!20))))
(assert (forall ((s0!104 T_ReplicatedCreditAccount))
  (= s0!104 (ReplicatedCreditAccount.getValue$state!26 s0!104))))
(assert (forall ((s0!104 T_ReplicatedCreditAccount))
  (= (ReplicatedCreditAccount.getValue!27 s0!104)
     (PNCounter.getValue!12 (credits s0!104)))))
(assert (forall ((s0!109 T_ReplicatedCreditAccount) (val!28 Int)) true))
(assert (forall ((s0!109 T_ReplicatedCreditAccount) (val!28 Int))
  (= (credits (ReplicatedCreditAccount.deposit$state!29 s0!109 val!28))
     (PNCounter.inc$state!16 (credits s0!109) val!28))))
(assert (forall ((s0!114 T_ReplicatedCreditAccount) (val!31 Int)) true))
(assert (forall ((s0!114 T_ReplicatedCreditAccount) (val!31 Int))
  (= (credits (ReplicatedCreditAccount.withdraw$state!32 s0!114 val!31))
     (PNCounter.dec$state!21 (credits s0!114) val!31))))




(forall ((s0!121 T_GCounter))
  (let ((a!1 (forall ((i!41 Int))
               (let ((a!1 (not (and (>= i!41 0) (not (<= 3 i!41))))))
                 (or a!1 (= (select (increments s0!121) i!41) 0)))))
        (a!2 (forall ((i!38 Int)) (>= (select (increments s0!121) i!38) 0))))
    (=> (and a!1 true) a!2)))
